buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            name 'PeopleNet Cloud'
            url 'http://artifactory.dev-tools.connectedfleet.io:8081/artifactory/repo'
        }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "com.peoplenet:gradle-plugins:${peoplenetGradlePluginVersion}"
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.3.4'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
    }
}

apply plugin: 'idea'
apply plugin: 'com.peoplenet.groovy'
apply plugin: 'com.peoplenet.spring-boot'
apply plugin: 'com.commercehub.gradle.plugin.avro'
apply plugin: 'propdeps'

repositories {
    jcenter()
    mavenCentral()
    maven {
        name 'PeopleNet Cloud'
        url 'http://artifactory.dev-tools.connectedfleet.io:8081/artifactory/repo'
    }
}

springBoot {
    mainClass = 'com.peoplenet.rerun.RerunApplication'
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    compile("org.apache.kafka:kafka_2.10:${kafkaVersion}") {
        exclude group:"com.sun.jmx", module: "jmxri"
        exclude group: "javax.jms", module: "jms"
        exclude group: "com.sun.jdmk", module: "jmxtools"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "log4j", module: "log4j"
    }

    compile 'org.apache.avro:avro:1.7.7'
    compile 'com.google.guava:guava:18.0'
    compile "com.squareup.okhttp:okhttp:${okHttpVersion}"
    compile 'org.yaml:snakeyaml:1.15'
    compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0'
    compile 'org.slf4j:log4j-over-slf4j:1.7.7'
    compile 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'

    compile "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}"

    compile "com.peoplenet:spring-boot-common:${serviceCommonVersion}"
    compile "com.peoplenet:spring-boot-version:${serviceCommonVersion}"

    optional 'org.springframework.boot:spring-boot-configuration-processor'

    testCompile "com.squareup.okhttp:mockwebserver:${okHttpVersion}"
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.objenesis:objenesis:2.1'
    testCompile "org.springframework:spring-test:4.1.6.RELEASE"
}

compileJava.dependsOn(processResources)

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}


build.doFirst {
    new File('build').mkdir()
    file('build/version').text = version.toString()
    file('build/packer.properties').text = "rerun-${version.toString()}"
}
